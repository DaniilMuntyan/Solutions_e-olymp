{"name": "Два коня", "text": "Два коня\nНа стандартной шахматной доске (8×8) живут 2 шахматных коня: Красный и Зеленый. Обычно они беззаботно скачут по просторам доски, пощипывая шахматную травку, но сегодня особенный день: у Зеленого коня День Рождения. Зеленый конь решил отпраздновать это событие вместе с Красным. Но для осуществления этого прекрасного плана им нужно оказаться на одной клетке. Заметим, что Красный и Зеленый шахматные кони сильно отличаются от черного с белым: они ходят не по очереди, а одновременно, и если оказываются на одной клетке, никто никого не съедает. Сколько ходов им потребуется, чтобы насладиться праздником?\nВходные данные\nВо входном файле содержатся координаты коней, записанные по стандартным шахматным правилам (т.е. двумя символами - маленькая латинская буква (от a до h) и цифра (от 1 до 8), задающие столбец и строку соответсвенно).\nВыходные данные\nВыходной файл должен содержать наименьшее необходимое количество ходов, либо -1, если кони не могут встретиться.", "compiler": "Judge C++", "send_date": "15 окт. 2017 г., 23:06:44", "time": 2.2, "memory": 1796, "code": "#include <bits/stdc++.h>\nusing namespace std;\nint d[9][9];\nqueue< pair<int,int> > q;\nvoid bfs(pair<int,int> s, pair<int,int> f, int n){\n    d[s.first][s.second] = 1;\n    q.push(s);\n    int dx[8] = {2, 2, 1, 1, -1, -1, -2, -2};\n    int dy[8] = {1, -1, 2, -2, 2, -2, 1, -1};\n    while(!q.empty()){\n        pair<int,int> v = q.front();\n        q.pop();\n        int x = v.first,y = v.second;\n        pair<int,int> to;\n        for(int i = 0; i < 8; i++){\n            x += dx[i];\n            y += dy[i];\n            to = {x,y};\n            if((x <= 8 && x >= 1) && (y <= 8 && y >= 1) && !d[x][y]){\n                q.push(to);\n                d[x][y] = d[v.first][v.second] + 1;\n                if(f == to) {\n                    int ans = d[x][y]-1;\n                    if(ans%2==0)\n                        cout << ans/2 << endl;\n                    else\n                        cout << -1 << endl;\n                    return;\n                }\n            }\n            x -= dx[i];\n            y -= dy[i];\n        }\n    }\n    cout << \"-1\" << endl;\n}\nint main()\n{\n    int n = 8;\n    char a, b;\n    int i1, j1,i2,j2;\n    cin >> a >> j1;\n    switch(a){\n    case 'a':\n        i1 = 1;\n        break;\n    case 'b':\n        i1 = 2;\n        break;\n    case 'c':\n        i1 = 3;\n        break;\n    case 'd':\n        i1 = 4;\n        break;\n    case 'e':\n        i1 = 5;\n        break;\n    case 'f':\n        i1 = 6;\n        break;\n    case 'g':\n        i1 = 7;\n        break;\n    case 'h':\n        i1 = 8;\n        break;\n    }\n    cin >> b >> j2;\n    switch(b){\n    case 'a':\n        i2 = 1;\n        break;\n    case 'b':\n        i2 = 2;\n        break;\n    case 'c':\n        i2 = 3;\n        break;\n    case 'd':\n        i2 = 4;\n        break;\n    case 'e':\n        i2 = 5;\n        break;\n    case 'f':\n        i2 = 6;\n        break;\n    case 'g':\n        i2 = 7;\n        break;\n    case 'h':\n        i2 = 8;\n        break;\n    }\n    bfs({i1,j1},{i2,j2}, 8);\n}", "link": "https://www.e-olymp.com/ru/problems/999"}