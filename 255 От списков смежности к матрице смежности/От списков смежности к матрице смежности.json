{"name": "От списков смежности к матрице смежности", "text": "От списков смежности к матрице смежности\nПростой ориентированный граф задан в виде списков смежности. Выведите его представление в виде матрицы смежности.\nВходные данные\nВ первой строке содержится количество вершин n (1 ≤ n ≤ 100). Далее идут n строк. В i-ой строке содержится описание всех рёбер, исходящих из i-ой вершины. Описание начинается количеством исходящих рёбер. Далее следуют номера вершин, в которые эти рёбра идут. Все вершины нумеруются натуральными числами от 1 до n.\nВыходные данные\nВыведите матрицу смежности ориентированного графа.", "compiler": "Judge C++", "send_date": "3 окт. 2017 г., 15:13:14", "time": 4.31, "memory": 1752, "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nmain()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    int n, N;\n    cin >> n;\n    N = n;\n    int t, i = 0, v;\n    vector <int> g[n];\n    while(n--){\n        cin >> t;\n        while(t--){\n            cin >> v;\n            g[i].push_back(v);\n        }\n        i++;\n    }\n    n = N;\n    int d[n][n];\n    for(int i = 0; i < n; i++)\n        for(int j = 0; j < n; j++) d[i][j] = 0;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < g[i].size();j++){\n            d[i][g[i][j]-1] = 1;\n        }\n    }\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < n; j++) cout << d[i][j] << \" \";\n        cout << endl;\n    }\n}", "link": "https://www.e-olymp.com/ru/problems/3982"}