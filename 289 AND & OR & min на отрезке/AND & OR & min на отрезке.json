{"name": "AND & OR & min на отрезке", "text": "AND & OR & min на отрезке\nУ Василия есть n чисел: x1, x2,..., xn. Вы должны помочь ему быстрко отвечать на запросы двух типов:\nAND L R - здесь вам нужно найти минимальное значение xi1 AND xi2 AND ... AND xik, где {xik} - некоторое непустое подмножество, L ≤ i1 < i2 < ... < ik ≤ R, 1 ≤ L ≤ R ≤ n.\nOR L R - в этом случае вам нужно найти минимальное значение xi1 OR xi2 OR ... OR xik, где {xik} - некоторое непустое подмножество, L ≤ i1 < i2 < ... < ik ≤ R, 1 ≤ L ≤ R ≤ n.\nВходные данные\nВ первой строке задано число n (1 ≤ n ≤ 100000). В следующей строке задано n чисел xi (0 ≤ xi ≤ 109). После этого задано количество запросов m (1 ≤ m ≤ 100000), на которые Вам нужно найти ответ. В последующих m строках заданы сами запросы.\nВыходные данные\nОтвет на каждый запрос выводите в новой строке.", "compiler": "Judge C++", "send_date": "24 июн. 2017 г., 18:07:55", "time": 316.49, "memory": 3688, "code": "#include <bits/stdc++.h>\nusing namespace std;\nint *A, *tree, *tree1;\nvoid build(int k, int left, int right){\n    if(left == right)\n    {\n        tree[k] = A[left];\n        return;\n    }\n    int center = (left + right)/2;\n    build(2*k,left,center);\n    build(2*k+1,center+1,right);\n    tree[k] = tree[k*2] & tree[k*2+1];\n}\nvoid build1(int k, int left, int right){\n    if(left == right){\n        tree1[k] = A[left];\n        return;\n    }\n    int center = (left+right)/2;\n    build1(2*k,left,center);\n    build1(2*k+1,center+1,right);\n    tree1[k] = min(tree1[k*2],tree1[2*k+1]);\n}\nint query(int k, int left, int right, int l, int r){\n    if(l > r)\n        return INT_MAX;\n    if(l == left && r == right)\n        return tree[k];\n    int center = (right + left)/2;\n\n    return query(2*k,left,center,l,min(r,center))&\n    query(2*k+1,center+1,right,max(l,center+1),r);\n}\nint query1(int k, int left, int right, int l, int r){\n    if(l > r)\n        return INT_MAX;\n    if(l == left && r == right)\n        return tree1[k];\n    int center = (right + left)/2;\n    return min(query1(2*k,left,center,l,min(r,center)),\n                query1(2*k+1,center+1,right,max(l,center+1),r));\n}\nint main() {\n    int n,t;\n    string s;\n    cin >> n;\n    A = new int[n];\n    tree = new int[4 * n];\n    tree1 = new int[4 * n];\n    for(int i = 0; i < n; i++)\n        cin >> A[i];\n    build(1,0,n-1);\n    build1(1,0,n-1);\n    cin >> t;\n    while(t--){\n        cin >> s;\n        if(s == \"AND\"){\n            int l,r;\n            cin >> l >> r;\n            cout << query(1,0,n-1,--l,--r) << endl;\n        }else{\n            int l,r;\n            cin >> l >> r;\n            cout << query1(1,0,n-1,--l,--r) << endl;\n        }\n    }\n}", "link": "https://www.e-olymp.com/ru/problems/4510"}