{"name": "Смешная функция", "text": "Смешная функция\nМы любим рекурсию! Не так ли?\nРассмотрим рекурсивную функцию w(a, b, c) с тремя параметрами:\nif a < = 0 or b < = 0 or c < = 0, then w(a, b, c) return 1\nif a > 20 or b > 20 or c > 20, then w(a, b, c) return w(20, 20, 20)\nif a < b and b < c, then w(a, b, c) return w(a, b, c - 1) + w(a, b- 1, c - 1) - w(a, b - 1, c)\notherwise return w(a - 1, b, c) + w(a - 1, b - 1, c) + w(a - 1, b, c - 1) - w(a - 1, b - 1, c - 1)\nЗдесь приведена самая простая реализация. Проблема состоит в том, что если указанную функцию реализовать напрямую, то даже для небольших значений a, b и c (например a = 15, b = 15, c = 15), программа будет работать часами из-за присутствующей рекурсии.\nВходные данные\nКаждая строка содержит три числа a, b, c. Последняя строка содержит -1 -1 -1 и не обрабатывается. Для каждой входной тройки Вам следует вычислить значение w(a, b, c).\nВыходные данные\nДля каждой тройки вывести значение w(a, b, c).", "compiler": "Judge C++", "send_date": "18 апр. 2017 г., 14:13:40", "time": 2.24, "memory": 2276, "code": "#include <bits/stdc++.h>\nusing namespace std;\nunsigned long long d[51][51][51];\nunsigned long long w(unsigned long long a, unsigned long long b,unsigned  long long c){\n\n    if(d[a][b][c] != -1)\n        return d[a][b][c];\n\n    if(a <= 0 || b <= 0 || c <= 0){\n        d[a][b][c] = 1;\n        return 1;\n    }\n    if(a > 20 || b > 20 || c > 20){\n        return w(20,20,20);\n    }\n    if(a < b && b < c)\n    {\n//        if(d[a][b][c-1] == -1)\n//            d[a][b][c-1] = w(a,b,c-1);\n//        if(d[a][b-1][c-1] == -1)\n//            d[a][b-1][c-1] = w(a,b-1,c-1);\n//        if(d[a][b-1][c] == -1)\n//            d[a][b-1][c] = w(a,b-1,c);\n        return d[a][b][c] = w(a,b,c-1) + w(a,b-1,c-1) - w(a,b-1,c);\n    }\n   /* if(d[a-1][b][c] == -1)\n        d[a-1][b][c] = w(a - 1, b, c);\n    if(d[a-1][b-1][c] == -1)\n        d[a-1][b-1][c] = w(a - 1, b - 1, c);\n    if(d[a-1][b][c-1] == -1)\n        d[a-1][b][c-1] = w(a - 1, b, c - 1);\n    if(d[a-1][b-1][c-1] == -1)\n        d[a-1][b-1][c-1] = w(a - 1, b - 1, c - 1);*/\n    return d[a][b][c] = w(a - 1, b, c) + w(a - 1, b - 1, c) + w(a - 1, b, c - 1) - w(a - 1, b - 1, c - 1);\n\n}\nint main()\n{\n    string s = \"\";\n    long long a, b, c;\n        for(long long i = 0; i < 51; i++)\n            for(long long j = 0; j < 51; j++)\n                for(long long k = 0; k < 51;k++)\n                    d[i][j][k] = -1;\n    while(cin >> a >> b >> c)\n    {\n        if(a == -1 && b == -1 && c == -1)\n            return 0;\n        if(a <= 0 || b <= 0 || c <= 0)\n        {\n            cout << \"w(\" << a << \", \" << b << \", \" << c << \") = \" << 1 << endl;\n            continue;\n        }\n        cout << \"w(\" << a << \", \" << b << \", \" << c << \") = \" << w(a,b,c) << endl;\n    }\n}", "link": "https://www.e-olymp.com/ru/problems/2177"}