{"name": "Сортирующая игра", "text": "Сортирующая игра\nВ Сортирующей Игре изначально задана перестановка чисел от 1 до n включительно. За один ход можно выбрать любые k последовательно стоящих чисел и развернуть их в обратном порядке. Найти наименьшее количество ходов, за которое можно отсортировать все числа в порядке возрастания.\nВходные данные\nСостоит из нескольких тестов. Первая строка каждого теста содержит два целых числа n (2 ≤ n ≤ 8) и k (2 ≤ k ≤ n). Вторая строка каждого теста содержит перестановку чисел от 1 до n.\nВыходные данные\nДля каждого теста вывести в отдельной строке наименьшее количество ходов, за которое можно отсортировать все числа в порядке возрастания. Если сортировка невозможна, то вывести -1.", "compiler": "Judge C++", "send_date": "16 окт. 2017 г., 19:56:33", "time": 484.19, "memory": 7768, "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nvector <int> a(9);\nint k, n;\nqueue< vector<int> > q;\nmap< vector<int>, int> d;\nvector <int> func(int l){\n    vector <int> ans(n), a1 = a;\n    copy(a1.begin()+l, a1.begin()+l+k, ans.begin());\n    reverse(ans.begin(),ans.begin()+k);\n    int c = 1;\n    for(register int i = l; ; i++){\n        a1[i] = ans[c-1];\n        if(c == k)\n            break;\n        c++;\n    }\n    return a1;\n}\ninline bool check(vector <int> a, vector <int> b){\n    for(register int i = 0; i < n; i++)\n        if(a[i] != b[i])\n            return false;\n    return true;\n}\nvoid bfs(){\n    d.clear();\n    while(!q.empty()) q.pop();\n    vector <int> f(n);\n    for(int p = 0; p < n; p++)\n        f[p] = a[p];\n    sort(f.begin(), f.end());\n    q.push(a);\n    d.insert({a, 1});\n    while(!q.empty()){\n        vector <int> curr = q.front();\n        q.pop();\n        a = curr;\n        if(check(curr,f))\n        {\n            cout << d[curr]-1 << endl;\n            return;\n        }\n        for(register int i = 0; i < n-k+1; i++){\n            vector<int> j = func(i);\n            if(!d[j])\n            {\n                q.push(j);\n                d[j] = d[curr] + 1;\n            }\n        }\n    }\n    cout << \"-1\" << endl;\n}\nmain()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    while(cin >> n >> k){\n        for(int i = 0; i < n; i++)\n            cin >> a[i];\n        bfs();\n    }\n\n}", "link": "https://www.e-olymp.com/ru/problems/2384"}