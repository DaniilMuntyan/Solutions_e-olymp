{"name": "Числа Фибоначчи", "text": "Числа Фибоначчи\nКак известно, последовательность Фибоначчи определяется следующим образом:\nF(0) = 0, F(1) = 1, F(n) = F(n - 1) + F(n - 2) для всех n > 1\nНазвана она в честь итальянского математика Леонардо Фибоначчи, известного также под именем Леонардо Пизанского.\nПо заданным n и m вычислить наибольший общий делитель чисел F(n) и F(m).\nВходные данные\nКаждая строка является отдельным тестом и содержит два целых числа n и m (1 ≤ n, m ≤ 1018). Количество тестов не превышает 1000.\nВыходные данные\nДля каждого теста в отдельной строке вывести значение НОД(F(n), F(m)), вычисленное по модулю 108.", "compiler": "Judge C++", "send_date": "19 апр. 2017 г., 10:10:16", "time": 9.05, "memory": 1800, "code": "#include <cstdio>\n#include <map>\n#define MOD 100000000\nusing namespace std;\n \nmap<long long, long long> F;\n \nlong long gcd(long long a, long long b)\n{\n  return (!b) ? a : gcd(b,a % b);\n}\n \nlong long fib(long long n)\n{\n  if (n == 0) return 0;\n  if (n == 1) return 1;\n  if (n == 2) return 1;\n  if (F[n]) return F[n];\n  long long k = n / 2;\n  if (n % 2 == 1) // n=2*k+1\n    return F[n] = (fib(k) * fib(k) + fib(k+1) * fib(k+1)) % MOD;\n  else // n=2*k\nreturn F[n] = (fib(k) * fib(k+1) + fib(k-1) * fib(k)) % MOD;\n}\n \nlong long a, b, d;\n \nint main(void)\n{\n  while(scanf(\"%lld %lld\",&a,&b) == 2)\n  {\n    d = gcd(a,b);\n    printf(\"%lld\\n\",fib(d));\n  }\n  return 0;\n}", "link": "https://www.e-olymp.com/ru/problems/2421"}