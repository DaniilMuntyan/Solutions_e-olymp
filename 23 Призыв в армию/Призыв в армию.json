{"name": "Призыв в армию", "text": "Призыв в армию\nДля похода на Азерот Оргриму Думхаммеру потребовался еще один отряд. На призыв явились n орков. Способности в ближнем бою и метании копья каждого из них Оргрим сразу же оценил. Теперь же он должен определить кого из них назначить солдатом-пехотинцем (grunt), а кого метателем-охотником за головами (headhunter). При этом, для того, чтобы отряд был боеспособным, необходимо, чтобы было в отряде было не менее g грунтов и не менее h хедхантеров. После определения каждого орка в какой-то тип войск, может быть определена сила этого отряда, как сумма способностей всех орков в назначенной им специализации.\nНапишите программу, определяющую максимально возможную силу вновь призванного отряда.\nВходные данные\nВ первой строке заданы три целых числа n, g, h (1 ≤ n ≤ 10000, 0 ≤ g, h ≤ n). Далее идут n строк, в каждой из которых записаны два целых числа в диапазоне от 0 до 10000 - способность соответствующего орка в ближнем бою и его способность в метании копья.\nВыходные данные\nВывести максимальную силу боеспособной армии, которая может быть создана из призывников. В случае невозможности создания армии, удовлетворяющей заданным условиям, выведите число -1.", "compiler": "Judge C++", "send_date": "23 авг. 2016 г., 11:46:31", "time": 10.11, "memory": 692, "code": "#include <bits/stdc++.h>\nusing namespace std;\nstruct S{\nint g;\nint h;\nint r;\n};\nbool p(S a, S b)\n{\n    if(a.g>b.g)\n        return true;\n    return false;\n}\nbool f(S a, S b)\n{\n    if(a.r == b.r)\n        return p(a,b);\n    if(a.r>b.r)\n        return true;\n    return false;\n\n}\nint main()\n{\n    int n;\n    cin >> n;\n    int G,H;\n    int k = 0;\n    S sold[n+1];\n    cin >> G >> H;\n    int g[n+1],h[n+1];\n    int i;\n    for(i=0;i<n;i++)\n    {\n         cin >> sold[i].g >> sold[i].h;\n         sold[i].r = sold[i].g-sold[i].h;\n    }\n    sort(sold,sold+n,f);\n    if(n < G + H)\n    {\n        cout << -1 << endl;\n        exit(0);\n    }else\n    {\n        for(i=0;i<G;i++)\n        {\n            k+=sold[i].g;\n        }\n        int w = i;\n        int u = 1;\n        i=n-1;\n        while(u <= H&&i>=0)\n        {\n\n\n            k+=sold[i].h;\n            u++;\n            i--;\n        }\n\n            for(int j = i; j>=w;j--)\n            k+=max(sold[j].g,sold[j].h);\n        cout << k << endl;\n    }\n}", "link": "https://www.e-olymp.com/ru/problems/182"}