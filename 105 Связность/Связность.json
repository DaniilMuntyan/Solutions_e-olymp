{"name": "Связность", "text": "Связность\nПроверить, является ли заданный неориентированный граф связным, то есть что из любой вершины можно по рёбрам этого графа попасть в любую другую.\nВходные данные\nВ первой строке заданы количество вершин n и ребер m в графе соответственно (1 ≤ n ≤ 100, 1 ≤ m ≤ 10000). Каждая из следующих m строк содержит по два числа ui и vi (1 ≤ ui, vi ≤ n); каждая такая строка означает, что в графе существует ребро между вершинами ui и vi.\nВыходные данные\nВыведите \"YES\", если граф является связным и \"NO\" в противном случае.", "compiler": "Judge C++", "send_date": "10 нояб. 2016 г., 19:11:48", "time": 6.04, "memory": 676, "code": "#include <iostream>\nusing namespace std;\nint n,m;\nint r[100][100]{0};\nint k;\nint a[101][101];\nbool used[101]{false};\nvoid proc(int v)\n{\n    int i = 1;\n    used[v] = true;\n    for(i = 1; i <= n; i++)\n    {\n        if(used[i]!=true && a[v][i] != 0)\n        {\n            k++;\n            proc(i);\n        }\n    }\n}\nint main()\n{\n\n    cin >> n >> m;\n\n    int i = 0,j = 0;\n    for(i = 1; i <= m; i++)\n    {\n        for(j = 1; j <= 2; j++)\n        {\n            cin >> r[j][i];\n        }\n        a[r[1][i]][r[2][i]] = 1;\n        a[r[2][i]][r[1][i]] = 1;\n    }\n    for(i = 1; i <= n; i++)\n    {\n        if(used[i]!=true)\n            proc(i);\n    }\n    if(k == n-1)\n        cout << \"YES\";\n    else\n        cout << \"NO\";\n}", "link": "https://www.e-olymp.com/ru/problems/982"}