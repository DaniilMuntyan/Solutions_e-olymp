{"name": "Умная черепашка", "text": "Умная черепашка\nИмеется клетчатое поле размером m × n. В левом нижнем углу сидит черепашка. Она умеет ходить только вправо или вверх. Перед тем как добраться до правого верхнего угла её заинтересовал вопрос: сколько существует способов добраться из исходной точки до правого верхнего угла?\nЧерепашка хотя и умная, но сама считать так много пока не умеет. Помогите черепашке найти ответ на свой вопрос.\nВходные данные\nДва натуральных числа m и n, не превышающие 30.\nВыходные данные\nВывести количество способов, которыми черепашка сможет добраться из левого нижнего угла в правый верхний.", "compiler": "Judge C++", "send_date": "24 янв. 2017 г., 18:16:57", "time": 4.49, "memory": 676, "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    long long m,n;\n    cin >> m >> n;\n    if(m==0 || n ==0)\n    {\n        cout << 0 << endl;\n        return 0;\n    }\n    if(m == 1 || n ==1)\n    {\n        cout << 1 << endl;\n        return 0;\n    }\n    if(n==2 || m ==2)\n    {\n        if(n==2)\n        {\n            cout << m << endl;\n            return 0;\n        }\n        if(m==2)\n        {\n            cout << n << endl;\n            return 0;\n        }\n    }\n    long long d[m+1][n+1];\n    long long i,j;\n    for(i=0;i<m;i++)\n        for(j=0;j<n;j++)\n        d[i][j] = 0;\n    for(i=0;i<=m;i++)\n        d[i][0] = 1;\n    for(j=0;j<=n;j++)\n        d[0][j]=1;\n\n    for(i=1;i<m;i++)\n    {\n        for(j=1;j<n;j++)\n        {\n            d[i][j] = d[i-1][j]+d[i][j-1];\n        }\n    }\n\n    cout << d[m-1][n-1] << endl;\n}", "link": "https://www.e-olymp.com/ru/problems/1704"}