{"name": "Магическая машинка", "text": "Магическая машинка\nУ Ибрагима есть чёрная магическая машинка. На ней есть три кнопки и табло. Табло может показывать не более чем четырёхзначные числа. Каждая из кнопок меняет число некоторым образом: первая множит его на 3, вторая прибавляет к нему сумму его цифр, а третья вычитает из него 2. В случае, если число становится отрицательным или превосходит 9999, машинка ломается.\nИбрагим может нажимать кнопки в любом порядке. Его интересует, как ему получить на табло число b после некоторой последовательности нажатий, если сейчас машинка показывает a. Помогите ему найти минимальное необходимое число нажатий.\nВходные данные\nВ одной строке находится два натуральных числа a и b (1 ≤ a, b ≤ 9999).\nВыходные данные\nВывести минимальное количество действий, за которое из числа a можно получить число b.", "compiler": "Judge C++", "send_date": "15 окт. 2017 г., 23:37:37", "time": 2.32, "memory": 1792, "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nvector <int> d(10e3);\nqueue<int> q;\nint add(int a){\n    int sum = 0;\n    int n = a;\n    while(n > 0){\n        sum += n%10;\n        n /= 10;\n    }\n    a += sum;\n    return a;\n}\nvoid bfs(int s, int f){\n    d[s] = 1;\n    int p = 0;\n    q.push(s);\n    while(!q.empty()){\n        int v = q.front();\n        q.pop();\n        if(v == f){\n            cout << d[f]-1 << endl;\n            return;\n        }\n        p++;\n        if(3*v > 0 && 3*v < 9999 && !d[3*v]){\n            q.push(v*3);\n            d[3*v] = d[v] + 1;\n        }\n        int c = add(v);\n        if(c > 0 && c < 9999 && !d[c]){\n            q.push(c);\n            d[c] = d[v] + 1;\n        }\n        if((v-2) > 0 && (v-2) < 9999 && !d[v-2]){\n            q.push(v-2);\n            d[v-2] = d[v] + 1;\n        }\n\n    }\n}\nmain()\n{\n    int a,b;\n    cin >> a >> b;\n    bfs(a,b);\n}", "link": "https://www.e-olymp.com/ru/problems/4850"}