{"name": "Вираз", "text": "Вираз\nДля запису числових виразів жителі країни Олімпія використовують наступний формат: 1. Вираз складається з операндів та знаків операцій, розділених пропусками. 2. Операнди: додатні цілі числа. 3. Операції: додавання (позначається знаком +) та множення (позначається знаком *). 4. Вираз розглядається зліва направо. Якщо у виразі зустрічається знак операції, виконується відповідна операція над двома останніми операндами перед ним, результат операції замінює у виразі послідовність її операндів і знаку операції, після чого обчислення продовжується за цим же правилом. 5. Результатом виразу є результат останньої операції.\nОбчислимо, наприклад, вираз 3 4 2 * +\nПерша операція у виразі - множення (*), вона буде виконана над останніми перед нею числами (4 та 2), отримаємо число 8, що замінить послідовність 42*, таким чином отримаємо вираз 3 8 +. У отриманому виразі перша операція, що зустрілась - додавання (+), вона буде виконана над останніми перед нею числами (3 та 8), отримаємо число 11, що замінить послідовність 38+.\nОскільки операцій у виразі більше не залишилось, обчислення виразу завершилось. Результатом виразу є число 11.\nВідомо, що значення будь-якого виразу знаходиться у межах від 0 до 2000000000.\nВхідні дані\nВхідний текстовий файл містить вираз, що складається з додатних цілих чисел та знаків операцій, розділених пропусками. Максимальна довжина виразу - 10000 символів.\nВихідні дані\nВихідний текстовий файл містить єдине число - результат обчислення виразу.", "compiler": "Judge C++", "send_date": "24 мар. 2017 г., 14:09:50", "time": 3.21, "memory": 1804, "code": "#include <bits/stdc++.h>\n#include <stdio.h>\n#include <stdlib.h>\nusing namespace std;\nlong long invertToNumber(string a)\n{\n    long long res = 0,h=1;\n    for(int i = a.length()-1; i >=0; i--)\n    {\n        res += (a[i] - '0') * h;\n        h*=10;\n    }\n    return res;\n}\nstring invertToString(long long a)\n{\n    string ans = \"\";\n    vector <char> c;\n    int k = 0;\n    while(a > 0)\n    {\n        c.push_back(a%10 + '0');\n        a/=10;\n        k++;\n    }\n    reverse(c.begin(),c.end());\n    for(int i = 0; i < c.size();i++)\n        ans+=c[i];\n    return ans;\n}\nint main()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    string t;\n    vector <string> h;\n    vector <long> a;\n    vector <long long> d;\n    while(cin >> t)\n    {\n        h.push_back(t);\n        if(isdigit(t[0]))\n            a.push_back(invertToNumber(t));\n        else{\n            if(t == \"+\")\n                d.push_back(invertToNumber(h[h.size()-2])+invertToNumber(h[h.size()-3]));\n            else\n                d.push_back(invertToNumber(h[h.size()-2])*invertToNumber(h[h.size()-3]));\n        h.erase(h.begin() + h.size()-3, h.begin() + h.size());\n        h.push_back(invertToString(d[d.size()-1]));\n        }\n    }\n    cout << d[d.size()-1] << endl;\n}", "link": "https://www.e-olymp.com/ru/problems/7675"}