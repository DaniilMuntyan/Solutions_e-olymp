{"name": "Черепашка", "text": "Черепашка\nВ левом верхнем углу прямоугольной таблицы размером n × m находится черепашка. На каждой клетке таблицы разлито некоторое количество кислоты. Черепашка может перемещаться вправо или вниз, при этом маршрут черепашки заканчивается в правом нижнем углу таблицы.\nКаждый миллилитр кислоты приносит черепашке некоторое количество урона. Найдите наименьшее возможное значение урона, которое получит черепашка после прогулки по таблице.\nВходные данные\nВ первой строке записаны два натуральных числа n и m, не превосходящие 1000 - размеры таблицы. Далее идёт n строк, каждая из которых содержит m чисел, разделённых пробелами - описание таблицы с указанием для каждой клетки содержания кислоты на ней (в миллилитрах).\nВыходные данные\nВывести минимальную возможную стоимость маршрута черепашки.", "compiler": "Judge C++", "send_date": "25 янв. 2017 г., 22:19:36", "time": 86.41, "memory": 8332, "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    int n,m;\n    int ans = 0;\n    int i,j;\n    int sum1 = 0,sum2 = 0;\n    cin >> n >> m;\n    int a[n+1][m+1];\n    int d[n+1][m+1];\n  /*  for(i=0;i<=n;i++)\n    {\n        a[i][0] = 0;\n        a[0][i] = 0;\n    }*/\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j <= m;j++)\n        {\n            cin >> a[i][j];\n        }\n    }\n    for(i=1;i<=n;i++)\n    {\n        sum1+=a[i][1];\n        d[i][1] = sum1;\n    }\n    for(j=1;j<=m;j++)\n    {\n        sum2 += a[1][j];\n        d[1][j] = sum2;\n    }\n    ans = d[1][1];\n    for(i=2;i<=n;i++)\n        for(j=2;j<=m;j++)\n            d[i][j] = min(d[i-1][j],d[i][j-1]) + a[i][j];\n    cout << d[n][m] << endl;\n\n}", "link": "https://www.e-olymp.com/ru/problems/4018"}