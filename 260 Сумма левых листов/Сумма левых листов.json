{"name": "Сумма левых листов", "text": "Сумма левых листов\nЗадан массив целых чисел. Создайте из них Бинарное Дерево Поиска. Если вставляемое значение равно текущей вершине, то его следует вставлять в правое поддерево.\nРеализуйте метод SumLeft, который возвращает сумму всех левых листов в дереве.\nНапишите код согласно следующего интерфейса:\nclass TreeNode\n{\npublic:\nint val;\nTreeNode *left;\nTreeNode *right;\nTreeNode(int x) : val(x), left(NULL), right(NULL) {}\n};\nclass Tree\n{\npublic:\nTreeNode *head;\nTree() : head(NULL) {};\nvoid Insert(int val); // Вставка числа val в Бинарное Дерево Поиска\nint SumLeft(void); // Вернуть сумму всех левых листов в дереве\n};\nВы можете создавать (использовать) по необходимости дополнительные методы.\nВходные данные\nПервая строка содержит число n (1 ≤ n ≤ 100). Вторая строка содержит n целых чисел.\nВыходные данные\nСоздайте Бинарное Дерево Поиска из входных данных. Выведите сумму всех левых листов в дереве. Если дерево не содержит левых листов, то вывести 0.", "compiler": "Judge C++", "send_date": "15 мая 2016 г., 19:48:04", "time": 69.53, "memory": 692, "code": "#include <iostream>\nusing namespace std;\nint main()\n{\nint n, m;\nint x, y;\ncin >> n >> m;\nint i, j;\nfor(i = 0; i < n; i++)\nfor(j = 0; j < 2; j++)\ncin >> x >> y;\ncout << -1 << endl;\nreturn 0;\n}", "link": "https://www.e-olymp.com/ru/problems/4003"}