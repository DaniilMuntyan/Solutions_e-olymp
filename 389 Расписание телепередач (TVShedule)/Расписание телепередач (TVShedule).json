{"name": "Расписание телепередач (TVShedule)", "text": "Расписание телепередач (TVShedule)\nКак известно, новый канал «6 + 6» в последнее время получил огромную популярность. Перспективные компании (назовем их А, В и С) за большие деньги предложили включить в расписание по одной своей передаче (конечно интересные, но содержащие скрытую рекламу) в удобное для них время. Руководство канала опасается, что время выхода в эфир этих трансляций может пересекаться. Разобраться в этом хитросплетении самостоятельно они не смогли, поэтому обратились к Андрею, который сразу начал составлять программу. Время передачи определяется четырьмя целыми числами - часами и минутами начала и окончания. Все данные корректны - часы находятся в диапазоне от 0 до 23, минуты от 0 до 59, время окончания больше времени начала. Считается, что времена трансляций пересекаются, если в течение, хотя бы одной минуты они идут одновременно. Программа должна определять, пересекаются ли время передач А, В и С и выдать сообщение:\n0 - если времена передач не пересекаются;\n1 - если пересекаются только времена передач А и В;\n2 - если пересекаются только времена передач А и С;\n3 - если время трансляции А пересекается с В и С (а они не пересекаются);\n4 - если пересекаются только времена передач В и С;\n5 - если время трансляции В пересекается с А и С (а они не пересекаются);\n6 - если время трансляции С пересекается с А и В (а они не пересекаются);\n7 - если существует общее время для всех трех передач;\n8 - в других случаях.\nА ну-ка, напишите лучшую программу!\nВходные данные\nВ трех строчках находятся по 4 целых числа (часы и минуты начала, часы и минуты окончания) трансляций фирм А, В и С соответственно.\nВыходные данные\nПрограмма выводит сообщение согласно правилу, указанному выше.", "compiler": "Judge C++", "send_date": "5 дек. 2017 г., 16:10:02", "time": 2.22, "memory": 1756, "code": "#include <bits/stdc++.h>\nusing namespace std;\nstruct S\n{\n    int a,b;\n};\nbool check(S v, S m)\n{\n\n    int A = v.a, B=v.b,  C=m.a, D=m.b;\n    if(A == C) { return true; } if(A > C) { if(A < D) { return true; } return false; } if(A < C) { if(B > C) { return true; } return false; } return false;\n}\nint main()\n{\n    vector <S> d(3);\n    int i;\n    int q,w,e,r,t,y;\n    for(i=0;i<3;i++)\n    {\n        cin >> q >> w >> e >> r;\n        d[i].a = q*60+w;\n        d[i].b = e*60+r;\n    }\n    if(!check(d[0],d[1]) && !check(d[1],d[2]) && !check(d[0],d[2]))\n    {\n        cout << 0 << endl;\n        return 0;\n    }\n    if(check(d[0],d[1]) && !check(d[1],d[2]) && !check(d[0],d[2]))\n    {\n        cout << 1 << endl;\n        return 0;\n    }\n    if(check(d[0],d[2]) && !check(d[1],d[2]) && !check(d[0],d[1]))\n    {\n        cout << 2 << endl;\n        return 0;\n    }\n    if(check(d[0],d[1]) && check(d[0],d[2]) && !check(d[1],d[2]))\n    {\n        cout << 3 << endl;\n        return 0;\n    }\n    if(check(d[1],d[2]) && !check(d[0],d[2]) && !check(d[0],d[1]))\n    {\n        cout << 4 << endl;\n        return 0;\n    }\n    if(check(d[1],d[0])&&check(d[1],d[2]) && !check(d[0],d[2])){\n        cout << 5 << endl;\n        return 0;\n    }\n    if(check(d[2],d[0]) && check(d[2],d[1]) && !check(d[1],d[0]))\n    {\n        cout << 6 << endl;\n        return 0;\n    }\n    if(check(d[1],d[0]) && check(d[0],d[2]) && check(d[1],d[2]))\n    {\n        cout << 7 << endl;\n        return 0;\n    }\n    cout << 8 << endl;\n    return 0;\n}", "link": "https://www.e-olymp.com/ru/problems/7370"}