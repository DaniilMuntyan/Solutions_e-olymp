{"name": "Операции на графе", "text": "Операции на графе\nВ задаче необходимо создать неориентированный граф, на котором поддерживаются следующие операции:\nAddEdge(u, v) - добавить в граф ребро между вершинами (u, v);\nVertex(u) - вывести список вершин, смежных с вершиной u.\nПетель и кратных ребер в графе нет.\nВходные данные\nВ первой строке содержится количество вершин в графе n (1 ≤ n ≤ 105). В следующей строке находится количество операций k (0 ≤ k ≤ 106). Каждая из следующих строк задает операцию в формате: \"1 <число> <число>\" или \"2 <число>\", обозначающие соответственно операции AddEdge(u, v) и Vertex(u).\nГарантируется, что суммарное количество чисел, которое необходимо вывести при выполнении всех операций Vertex, не превосходит 2·105.\nВыходные данные\nДля каждой команды Vertex вывести в отдельной строке список смежных вершин указанной вершины. Вершины списка смежности можно выводить в произвольном порядке. Если для указанной вершины смежных нет, то следует вывести пустую строку.", "compiler": "Judge C++", "send_date": "5 окт. 2017 г., 12:47:43", "time": 280.25, "memory": 7452, "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nmain()\n{\n    int n;\n    cin >> n;\n    int k;\n    cin >> k;\n    vector <int> g[n];\n    int t, a, b;\n    while(k--){\n        cin >> t;\n        if(t == 1){\n            cin >> a >> b;\n            g[a-1].push_back(b);\n            g[b-1].push_back(a);\n        }else{\n            cin >> a;\n            if(g[a-1].size() != 0){\n                for(int i = 0; i < g[a-1].size(); i++)\n                    cout << g[a-1][i] << \" \";\n            }else\n                cout << \"\";\n            cout << endl;\n        }\n    }\n}", "link": "https://www.e-olymp.com/ru/problems/2472"}