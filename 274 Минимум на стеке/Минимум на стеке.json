{"name": "Минимум на стеке", "text": "Минимум на стеке\nВам требуется реализовать структуру данных, выполняющую следующие операции:\nДобавить элемент x в конец структуры.\nУдалить последний элемент из структуры.\nВыдать минимальный элемент в структуре.\nВходные данные\nВ первой строке задано количество операций n (1 ≤ n ≤ 106). В следующих n строках заданы сами операции. В i-ой строке находится число ti - тип операции (1 если операция добавления, 2 если операция удаления, 3 если операция нахождения минимума). Если задана операция добавления, то через пробел записано целое число x (-109 ≤ x ≤ 109) - элемент, который следует добавить в структуру. Гарантируется, что перед каждой операцией удаления или нахождения минимума структура не пуста.\nВыходные данные\nДля каждой операции нахождения минимума выведите в отдельной строке одно число - минимальный элемент в структуре.", "compiler": "Judge C++", "send_date": "5 окт. 2017 г., 13:32:50", "time": 1538.89, "memory": 44712, "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nmain()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    int n;\n    stack<int> s;\n    multiset<int> d;\n    cin >> n;\n    int t,a;\n    while(n--){\n        cin >> t;\n        if(t == 1){\n            cin >> a;\n            s.push(a);\n            d.insert(a);\n        }\n        if(t == 2){\n            d.erase(s.top());\n            s.pop();\n        }\n        if(t == 3)\n            cout << *(d.begin()) << endl;\n\n    }\n}", "link": "https://www.e-olymp.com/ru/problems/4259"}