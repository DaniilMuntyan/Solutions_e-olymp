Обратный обход дерева
Задан массив целых чисел. Создайте из них Бинарное Дерево Поиска. Если вставляемое значение равно текущей вершине, то его следует вставлять в правое поддерево.
Реализуйте метод PostOrder обратного обхода дерева. При обратном обходе сначала посещается левое поддерево, потом правое поддерево, потом корень.
Напишите код согласно следующего интерфейса:
class TreeNode
{
public:
int val;
TreeNode *left;
TreeNode *right;
TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};
class Tree
{
public:
TreeNode *head;
Tree() : head(NULL) {};
void Insert(int val); // Вставка числа val в Бинарное Дерево Поиска
void PostOrder(void); // Вывести вершины дерева в порядке обратного обхода
};
Вы можете создавать (использовать) по необходимости дополнительные методы.
Входные данные
Первая строка содержит число n (1 ≤ n ≤ 100). Вторая строка содержит n целых чисел.
Выходные данные
Создайте Бинарное Дерево Поиска из входных данных. Выведите вершины дерева в порядке обратного обхода.