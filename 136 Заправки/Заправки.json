{"name": "Заправки", "text": "Заправки\nВ стране n городов, некоторые из которых соединены между собой дорогами. Для того, чтобы проехать по одной дороге требуется один бак бензина. В каждом городе бак бензина имеет разную стоимость. Вам требуется добраться из первого города в n-ый, потратив как можно меньшее количество денег.\nВходные данные\nСначала идет количество городов n (1 ≤ n ≤ 100), затем идет n чисел, i-ое из которых задает стоимость бензина в i-ом городе (все числа целые из диапазона от 0 до 100). Затем идет количество дорог m в стране, далее идет описание самих дорог. Каждая дорога задается двумя числами - номерами городов, которые она соединяет. Все дороги двухсторонние (то есть по ним можно ездить как в одну, так и в другую сторону); между двумя городами всегда существует не более одной дороги; не существует дорог, ведущих из города в себя.\nВыходные данные\nВыведите одно число - суммарную стоимость маршрута или -1, если добраться невозможно.", "compiler": "Judge C++", "send_date": "3 февр. 2017 г., 17:42:37", "time": 4.03, "memory": 672, "code": "#include <bits/stdc++.h>\nusing namespace std;\nint mM = 100000000;\nint main()\n{\n    int n,m;\n    cin >> n;\n\n    vector <int> c(n+1);\n    vector < pair <int,int> > g[n+1];\n    vector <int> d(n+1,mM);\n    set < pair<int,int> > q;\n    int i,j,a,b;\n    for(i=1;i<=n;i++)\n        cin >> c[i];\n    cin >> m;\n    while(m--){\n        cin >> a >> b;\n        g[a].push_back({c[a],b});\n        g[b].push_back({c[b],a});\n    }\n    int k = 1;\n     d[k] = 0;\n    q.insert({0, k});\n    while(!q.empty()) {\n        int k = q.begin() -> second;\n        q.erase(q.begin());\n        for(i = 0; i < g[k].size(); i++) {\n            int to = g[k][i].second;\n            int l = g[k][i].first;\n            if(d[k] + l < d[to]) {\n               d[to] = d[k] + l;\n                q.insert({d[to], to});\n            }\n        }\n    }\n    if(d[n] < mM)\n        cout  << d[n] << endl;\n    else\n        cout << -1 << endl;\n}", "link": "https://www.e-olymp.com/ru/problems/1388"}