{"name": "Истоки и стоки", "text": "Истоки и стоки\nВершина ориентированного графа называется истоком, если в неё не входит ни одно ребро, и стоком, если из неё не выходит ни одного ребра.\nОриентированный граф задан матрицей смежности. Найдите все его вершины-истоки и все вершины-стоки.\nВходные данные\nПервая строка содержит количество вершин в графе n (1 ≤ n ≤ 100), затем идет матрица смежности - n строк по n чисел, каждое из которых равно 0 или 1.\nВыходные данные\nВ первой строке выведите количество истоков в графе, затем номера вершин, являющиеся истоками, в порядке возрастания. Во второй строке выведите информацию о стоках в том же формате.", "compiler": "Judge C++", "send_date": "5 окт. 2017 г., 12:41:54", "time": 3.77, "memory": 1756, "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nmain()\n{\n    int n;\n    cin >> n;\n    int d[n][n];\n    int sum = 0;\n    vector <int> s1, s2;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < n; j++){\n            cin >> d[i][j];\n            sum += d[i][j];\n        }\n        if(sum == 0)\n            s2.push_back(i+1);\n        sum = 0;\n    }\n    sum = 0;\n    for(int j = 0; j < n; j++){\n        for(int i = 0; i < n; i++)\n            sum += d[i][j];\n        if(sum == 0)\n            s1.push_back(j+1);\n        sum = 0;\n    }\n    cout << s1.size() << \" \";\n    for(int i = 0; i < s1.size(); i++)\n        cout << s1[i] << \" \";\n    cout << endl << s2.size() << \" \";\n    for(int i = 0; i < s2.size(); i++)\n        cout << s2[i] << \" \";\n}", "link": "https://www.e-olymp.com/ru/problems/3986"}