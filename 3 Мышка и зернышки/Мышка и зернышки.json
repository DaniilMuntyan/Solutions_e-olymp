{"name": "Мышка и зернышки", "text": "Мышка и зернышки\nВ индийском храме пол прямоугольной формы выложен одинаковыми квадратными плитками 1 х 1, на каждую из которых высыпано от 0 до k зернышек (k ≤ 30000). Размеры пола m х n. Мышка выбегает из левого нижнего угла пола храма и двигается к входу в другую норку, расположенную в противоположном углу. Мышка может двигаться только вправо или вперед, собирая все зернышки с плитки, на которой она находится.\nНайти маршрут, двигаясь по которому мышка соберет наибольшее количество зернышек.\nВходные данные\nПервая строка содержит числа m и n – размеры пола (1 ≤ m, n ≤ 100). Далее идет m строк, начиная сверху, в каждой из которых размещено n чисел – количество зернышек на соответствующей плитке.\nВыходные данные\nВывести маршрут движения мышки в формате: RRFFFRF (F – шаг вперед, R – шаг вправо).", "compiler": "Judge C++", "send_date": "26 янв. 2017 г., 13:47:28", "time": 4.72, "memory": 724, "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    long long n,m;\n    cin >> n >>  m;\n    long long i,j;\n    vector <char> ans;\n    long long sum1=0,sum2=0;\n    long long a[n+1][m+1];\n    long long g[n+1][m+1];\n    long long d[n+2][m+2];\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++){\n                cin >> a[i][j];\n        }\n    for(i=1;i<=n;i++)\n        for(j=1;j<=m;j++)\n            g[n-i+1][j] = a[i][j];\n    for(i=1;i<=n;i++)\n    {\n        sum1+=g[i][1];\n        d[i][1] = sum1;\n    }\n    for(j=1;j<=m;j++)\n    {\n        sum2 += g[1][j];\n        d[1][j] = sum2;\n    }\n    for(i=2;i<=n;i++){\n        for(j=2;j<=m;j++){\n            d[i][j] = max(d[i][j-1], d[i-1][j]) + g[i][j];\n\n        }\n    }\n    /*cout << endl;\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=m;j++)\n        {\n            cout << d[i][j] << \" \";\n        }\n        cout << endl;\n    }\n     cout << endl;*/\n     for(j=1;j<=m;j++)\n        d[0][j] = -1;\n     for(i=1;i<=n;i++)\n        d[i][0] = -1;\n    i = n;\n    j = m;\n    while(i>=1 && j >= 1)\n    {\n        if(i==1 && j == 1)\n            break;\n        if(d[i-1][j] > d[i][j-1])\n        {\n            ans.push_back('F');\n            i--;\n        }else\n        {\n            ans.push_back('R');\n            j--;\n        }\n    }\n\n    for(i=ans.size()-1;i>=0;i--)\n        cout << ans[i];\n        cout << endl;\n\n\n\n\n}", "link": "https://www.e-olymp.com/ru/problems/15"}