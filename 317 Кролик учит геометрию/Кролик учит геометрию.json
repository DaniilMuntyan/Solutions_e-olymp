{"name": "Кролик учит геометрию", "text": "Кролик учит геометрию\nКролики - очень любопытны. Они любят изучать геометрию, бегая по грядкам. Наш кролик как раз из таких. Сегодня он решил изучить новую фигуру - квадрат.\nКролик бегает по грядке- клеточному полю N×M клеток. В некоторых из них посеяны морковки, в некоторых нет.\nПомогите Кролику найти сторону квадрата наибольшей площади, заполненного морковками полностью.\nВходные данные\nВ первой строке два натуральных числа N и M (1 ≤ N, M≤ 1000). Далее в N строках расположено по M чисел, разделённых пробелами (число равно 0, если в клетке нет морковки, или 1, если есть).\nВыходные данные\nВыведите одно число - сторону максимального квадрата, заполненного морковками.", "compiler": "Judge C++", "send_date": "13 авг. 2017 г., 15:01:43", "time": 225.35, "memory": 16896, "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nmain()\n{\n    int n,m;\n    cin >> n >> m;\n    int a[n+1][m+1];\n    int dp[n+1][m+1];\n    for(int i = 1; i <= n; i++){\n        for(int j = 1; j <= m; j++){\n            cin >> a[i][j];\n            dp[i][j] = 0;\n        }\n    }\n    int k = 0;\n\n    for(int i = 0; i <= n; i++) dp[i][0] = 0;\n    for(int j = 0; j <= m; j++) dp[0][j] = 0;\n\n    for(int i = 1; i <= n; i++){\n        for(int j = 1; j <= m; j++){\n            if(a[i][j] == 1)\n                dp[i][j] = min(dp[i-1][j], min(dp[i-1][j-1],dp[i][j-1])) + 1;\n            if(dp[i][j] > k) k = dp[i][j];\n        }\n    }\n   /* cout << endl;\n    for(int i = 0; i < n; i++){\n        for(int j = 0; j < m; j++) cout << dp[i][j] << \" \";\n        cout << endl;\n    }*/\n    cout << k << endl;\n\n}", "link": "https://www.e-olymp.com/ru/problems/4830"}