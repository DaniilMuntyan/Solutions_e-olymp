{"name": "Компоненты связности", "text": "Компоненты связности\nДан неориентированный невзвешенный граф. Необходимо посчитать количество его компонент связности.\nВходные данные\nВ первой строке содержится количество вершин n (n ≤ 100) в графе. Далее в n строках задается по n чисел - матрица смежности графа: в i-ой строке на j-ом месте стоит 1, если вершины i и j соединены ребром, и 0, если ребра между ними нет. На главной диагонали матрицы стоят нули. Матрица симметрична относительно главной диагонали.\nВыходные данные\nВывести количество компонент связности графа.", "compiler": "Judge C++", "send_date": "10 нояб. 2016 г., 19:11:26", "time": 4.67, "memory": 672, "code": "#include <iostream>\nusing namespace std;\nint n;\nint a[101][101];\nbool used[101] = {false};\nvoid DFS(int v)\n{\n    used[v] = true;\n    int i;\n    for(i = 1; i <= n; i++)\n    {\n        if(!used[i] && a[v][i] != 0)\n        {\n            DFS(i);\n        }\n    }\n}\nint main()\n{\n    int k = 0;\n    cin >> n;\n    int i, j;\n    for(i= 1; i <= n; i++)\n        for(j = 1; j <= n; j++)\n            cin >> a[i][j];\n    for(i = 1; i <= n; i++)\n    {\n        if(!used[i])\n        {\n            k++;\n            DFS(i);\n        }\n    }\n    cout << k << endl;\n\n\n\n}", "link": "https://www.e-olymp.com/ru/problems/2269"}