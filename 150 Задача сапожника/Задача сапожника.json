{"name": "Задача сапожника", "text": "Задача сапожника\nСапожнику необходимо выполнить n работ. Каждый день сапожник может выполнять только одну работу. Для каждой i - ой работы известно время ее выполнения в днях Ti и штраф Si, который каждый день должен платить сапожник до тех пор, пока он не отдаст i - ую работу заказчику. Найти последовательность выполнения работ, при которой сумма штрафа будет минимальной.\nВходные данные\nСостоит из нескольких тестов. Первая строка каждого теста содержит количество работ n (1 ≤ n ≤ 1000), за которой следуют n строк, содержащие характеристики работ Ti (1 ≤ Ti ≤ 1000) и Si (1 ≤ Si ≤ 10000).\nВыходные данные\nДля каждого теста в отдельной строке вывести порядок работ, при котором сумма штрафа минимальна. При существовании нескольких оптимальных порядков работ выводить лексикографически наименьший.", "compiler": "Judge C++", "send_date": "26 авг. 2016 г., 13:29:08", "time": 4.53, "memory": 688, "code": "#include <bits/stdc++.h>\nusing namespace std;\nstruct S\n{\n    double a,b,id;\n};\nbool r(S c, S d)\n{\n    if(c.a*d.b < d.a*c.b)\n        return true;\n    return false;\n}\nint main()\n{\n    int n;\n    while(cin >> n){\n\n    vector <S> f(n);\n    for(int i = 0;i<n;i++){\n        cin >> f[i].a >> f[i].b;\n        f[i].id = i+1;\n    }\n    stable_sort(f.begin(),f.end(),r);\n    for(int i=0;i<n;i++)\n        cout << f[i].id << \" \";\n    cout << endl;\n    }\n    return 0;\n}", "link": "https://www.e-olymp.com/ru/problems/1591"}