{"name": "Путь коня", "text": "Путь коня\nДана шахматная доска, состоящая из n × n клеток, несколько из них вырезано. Провести ходом коня через невырезанные клетки путь минимальной длины из одной клетки в другую.\nВходные данные\nВ первой строке задано число n (2 ≤ n ≤ 50). В следующих n строках содержится по n символов. Символом # обозначена вырезанная клетка, точкой - невырезанная клетка, @ - начальная и конечная клетки пути коня (таких символов два).\nВыходные данные\nЕсли путь построить невозможно, то вывести \"Impossible\". В противном случае вывести такую же карту, как и на входе, но пометить все промежуточные положения коня символом @.", "compiler": "Judge C++", "send_date": "15 окт. 2017 г., 16:37:58", "time": 2.57, "memory": 1800, "code": "#include <bits/stdc++.h>\nusing namespace std;\nint d[51][51];\npair<int,int> p[51][51];\nqueue< pair<int,int> > q;\nchar t[51][51];\nvoid bfs(pair<int,int> s, pair<int,int> f, int n){\n    d[s.first][s.second] = 1;\n    //d[s] = 1;\n    q.push(s);\n    int dx[8] = {2, 2, 1, 1, -1, -1, -2, -2};\n    int dy[8] = {1, -1, 2, -2, 2, -2, 1, -1};\n    bool c = false;\n    while(!q.empty()){\n        pair<int,int> v = q.front();\n        q.pop();\n        int x = v.first,y = v.second;\n        pair<int,int> to;\n        for(int i = 0; i < 8; i++){\n            x += dx[i];\n            y += dy[i];\n            to = {x,y};\n            if((x <= n && x >= 1) && (y <= n && y >= 1) && !d[x][y] && (t[x][y] != '#')){\n                q.push(to);\n               // cout << x << \" \" << y << endl;\n                d[x][y] = d[v.first][v.second] + 1;\n                p[x][y] = v;\n                if(f == to) {\n                    int r,w;\n                    r = x;\n                    w = y;\n                    pair<int,int> curr;\n                    while(true){\n                        curr = p[r][w];\n                        r = curr.first;\n                        w = curr.second;\n                        t[r][w] = '@';\n                        if(curr == s) break;\n                    }\n                    for(int i = 1; i <= n; i++){\n                        for(int j = 1; j <= n; j++)\n                            cout << t[i][j];\n                        cout << endl;\n                    }\n                    return;\n                }\n            }\n            x -= dx[i];\n            y -= dy[i];\n        }\n    }\n    cout << \"Impossible\" << endl;\n}\nint main()\n{\n    int n;\n    cin >> n;\n    int x1,y1,x2,y2;\n    bool c = false;\n    pair<int,int> one, two;\n    for(int i = 1; i <= n; i++){\n        for(int j = 1; j <= n; j++){\n            cin >> t[i][j];\n            if(t[i][j] == '@' && !c){\n                one = {i,j};\n                c = true;\n            }\n            if(t[i][j] == '@' && c)\n                two = {i,j};\n        }\n    }\n    bfs(one,two, n);\n}", "link": "https://www.e-olymp.com/ru/problems/1064"}