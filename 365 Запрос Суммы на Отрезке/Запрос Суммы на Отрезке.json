{"name": "Запрос Суммы на Отрезке", "text": "Запрос Суммы на Отрезке\nИмеется список L, который содержит n целых чисел. Найдите сумму на отрезке (RSQ) между индексами i и j включительно, то есть\nRSQ(i, j) = Li + Li+1 + Li+2 + ... + Lj\nВходные данные\nНачинается с количества тестов t (1 ≤ t ≤ 5). Каждый тест начинается с пустой строки, за которой идет строка с двумя целыми числами n и q (1 ≤ n, q ≤ 105). Следующая строка содержит n неотрицательных целых чисел до 109. Далее следуют q строк, каждая из которых содержит два целых числа i и j (0 ≤ i, j < 10000).\nВыходные данные\nДля каждого запроса вывести в отдельной строке значение RSQ(i, j). Разделяйте ответы на соседние тесты пустой строкой.", "compiler": "Judge C++", "send_date": "15 сент. 2017 г., 22:29:23", "time": 305.07, "memory": 4412, "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nint *A, *tree;\nint query(int k, int left, int right, int l, int r){\n    if(l > r) return 0;\n    if(l == left && r == right)\n        return tree[k];\n    int center = (left+right)/2;\n    return query(k*2, left, center, l, min(r, center)) +\n    query(k*2+1, center+1, right, max(l, center+1), r);\n}\nvoid build(int k, int left, int right){\n    if(left == right){\n        tree[k] = A[left];\n        return;\n    }\n\n    int center = (left+right)/2;\n    build(k*2, left, center);\n    build(k*2+1, center+1, right);\n    tree[k] = tree[k*2] + tree[2*k+1];\n}\nmain()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n    int t;\n    cin >> t;\n    while(t--){\n        int n, q;\n        cin >> n >> q;\n        A = new int[n];\n        for(int i = 0; i < n; i++) cin >> A[i];\n        tree = new int[n*4];\n        build(1, 0, n-1);\n        while(q--){\n            int l,r;\n            cin >> l >> r;\n            cout << query(1, 0, n-1, l, r) << endl;;\n        }\n        cout << endl;\n    }\n}", "link": "https://www.e-olymp.com/ru/problems/6959"}