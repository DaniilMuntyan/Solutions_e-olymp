{"name": "Квадрат", "text": "Квадрат\nУ Джан-Джи имеется кусок металла, из которого он хочет вырезать квадрат. Кусок состоит из сетки n на n, которую Джан-Джи может разрезать только по границам сетки. Каждая ячейка сетки либо исправная либо дефектная, при этом Джан-Джи хочет вырезать наибольший квадрат, не содержащий дефектных клеток. После определения максимального размера квадрата Джан-Джи хочет узнать сколькими различными способами он может вырезать его из имеющегося куска. После чего Джан-Джи следует вывести произведение максимального размера на количество способов расположения наибольшего квадрата.\nРассмотрим кусок материала размера 6 на 6. Черные ячейки дефектные. Наибольший квадрат, который может вырезать Джан-Джи, имеет размер 3 на 3, причем имеется два варианта его вырезать - красный и зеленый квадраты. Джан-Джи выведет произведение 3 и 2, то есть 6.\nВам следует найти размер наибольшего квадрата, который можно вырезать из куска материала, а также посчитать, сколькими различными вариантами это можно сделать. После чего вывести их произведение.\nВходные данные\nПервая строка содержит размер материала n (1 ≤ n ≤ 1000). Каждая из следующих n строк содержит n целых чисел. 1 означает что участок сетки целый, а 0 означает что участок сетки поврежден.\nВыходные данные\nВывести одно число – произведение размера наибольшего квадрата в материале на количество возможных его расположений в материале.", "compiler": "Judge C++", "send_date": "25 янв. 2017 г., 22:04:48", "time": 84.4, "memory": 4420, "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    int n;\n    cin >> n;\n    int i,j;\n    int maxLenght = 0;\n    int maxCount = 0;\n    int a[n+1][n+1];\n    for(i=0;i<n;i++)\n    {\n        a[0][i] = 0;\n        a[i][0] = 0;\n    }\n    for(i=1;i<=n;i++)\n    {\n        for(j=1;j<=n;j++)\n        {\n            cin >> a[i][j];\n            if(a[i][j] == 1)\n            {\n                a[i][j] = min(a[i-1][j],min(a[i][j-1],a[i-1][j-1])) + 1;\n                if(a[i][j] == maxLenght)\n                    maxCount++;\n                if(a[i][j] > maxLenght){\n                    maxLenght = a[i][j];\n                    maxCount = 1;\n                }\n            }\n        }\n    }\n    cout << maxCount*maxLenght << endl;\n}", "link": "https://www.e-olymp.com/ru/problems/7757"}