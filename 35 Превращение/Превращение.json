{"name": "Превращение", "text": "Превращение\nВозьмем какое-нибудь натуральное число n. Будем изменять его следующим образом: если число четное, то разделим его на 2, если нечетное, прибавим 1. После нескольких таких изменений мы всегда получаем число 1. Например, из числа 11 получается число 12, затем 6, 3, 4, 2 и наконец 1. Таким образом, для получения 1 из 11 нужно проделать 6 изменений.\nПо заданному натуральному числу найти количество его изменений до получения 1.\nВходные данные\nОдно натуральное число n (1 ≤ n ≤ 109).\nВыходные данные\nВывести количество изменений числа n до получения 1.", "compiler": "Judge C++", "send_date": "9 янв. 2017 г., 21:04:09", "time": 3.28, "memory": 676, "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    long n;\n    cin >> n;\n    int i =0;\n    while(n!=1)\n    {\n        if(n%2==0)\n            n/=2;\n        else\n            n++;\n            i++;\n    }\n    cout << i << endl;\n}", "link": "https://www.e-olymp.com/ru/problems/388"}